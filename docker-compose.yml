version: '3.8'

services:
  # React development server
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    ports:
      - "5173:5173"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:3001/api
      - VITE_APP_ENVIRONMENT=development
    command: npm run dev
    networks:
      - app-network
    depends_on:
      - api

  # Mock API server (optional - for development)
  api:
    image: node:18-alpine
    ports:
      - "3001:3001"
    volumes:
      - ./mock-api:/app
    working_dir: /app
    command: sh -c "npm install -g json-server && json-server --watch db.json --port 3001 --host 0.0.0.0"
    networks:
      - app-network

  # Production build
  app-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "8080:80"
    environment:
      - NODE_ENV=production
    networks:
      - app-network
    profiles:
      - production

  # Database (PostgreSQL example - uncomment if needed)
  # db:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: react_app
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: password
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - app-network

  # Redis (for caching - uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge

# volumes:
#   postgres_data: